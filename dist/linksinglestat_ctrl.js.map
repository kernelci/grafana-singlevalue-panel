{"version":3,"sources":["../src/linksinglestat_ctrl.js"],"names":["MetricsPanelCtrl","PanelEvents","LinkSingleStatCtrl","$scope","$injector","panelDefaults","textTemplate","urlTemplate","valueFontSize","prop","panel","events","on","editModeInitialized","onInitEditMode","bind","dataReceived","onDataReceived","panelSizeChanged","adjustFontSize","panelInitialized","fontSizes","addEditorTab","dataList","length","results","data","rows","text","replace","match","cellNumber","url","BASE_FONT_SIZE","fontPixelSize","parseInt","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,4B,kBAAAA,gB;;AACAC,uB,gBAAAA,W;;;;;;;;;;;;;;;;;;;;;0CAEHC,kB;;;AACF,4CAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,wJACrBD,MADqB,EACbC,SADa;;AAG3B,wBAAMC,gBAAgB;AAClBC,sCAAc,EADI;AAElBC,qCAAa,EAFK;AAGlBC,uCAAe;AAHG,qBAAtB;;AAMA,yBAAK,IAAIC,IAAT,IAAiBJ,aAAjB,EAAgC;AAC5B,4BAAI,EAAEI,QAAQ,MAAKC,KAAf,CAAJ,EAA2B;AACvB,kCAAKA,KAAL,CAAWD,IAAX,IAAmBJ,cAAcI,IAAd,CAAnB;AACH;AACJ;;AAED,0BAAKE,MAAL,CAAYC,EAAZ,CAAeX,YAAYY,mBAA3B,EAAgD,MAAKC,cAAL,CAAoBC,IAApB,OAAhD;AACA,0BAAKJ,MAAL,CAAYC,EAAZ,CAAeX,YAAYe,YAA3B,EAAyC,MAAKC,cAAL,CAAoBF,IAApB,OAAzC;AACA,0BAAKJ,MAAL,CAAYC,EAAZ,CAAeX,YAAYiB,gBAA3B,EAA6C,MAAKC,cAAL,CAAoBJ,IAApB,OAA7C;AACA,0BAAKJ,MAAL,CAAYC,EAAZ,CAAeX,YAAYmB,gBAA3B,EAA6C,MAAKD,cAAL,CAAoBJ,IAApB,OAA7C;AAlB2B;AAmB9B;;;;qDAEgB;AACb,6BAAKM,SAAL,GAAiB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,MAApC,EAA4C,MAA5C,EAAoD,MAApD,EAA4D,MAA5D,EAAoE,MAApE,EAA4E,MAA5E,CAAjB;AACA,6BAAKC,YAAL,CAAkB,SAAlB,EAA6B,yDAA7B;AACH;;;mDAEcC,Q,EAAU;AACrB,4BAAI,CAACA,SAASC,MAAd,EAAsB;AAClB;AACH;;AAED,4BAAMC,UAAUF,SAAS,CAAT,CAAhB;;AAEA,4BAAI,CAACE,OAAL,EAAc;AACV;AACH;;AAED,4BAAMC,OAAOD,QAAQE,IAAR,IAAgBF,QAAQE,IAAR,CAAa,CAAb,CAA7B;;AAEA;AACA,6BAAKC,IAAL,GAAY,KAAKlB,KAAL,CAAWJ,YAAX,CAAwBuB,OAAxB,CACR,mBADQ,EAER,UAACC,KAAD,EAAQC,UAAR;AAAA,mCACIL,KAAKK,UAAL,CADJ;AAAA,yBAFQ,CAAZ;AAMA,6BAAKC,GAAL,GAAW,KAAKtB,KAAL,CAAWH,WAAX,CAAuBsB,OAAvB,CACP,mBADO,EAEP,UAACC,KAAD,EAAQC,UAAR;AAAA,mCACIL,KAAKK,UAAL,CADJ;AAAA,yBAFO,CAAX;AAMH;;;6CAEQ;AACL,6BAAKZ,cAAL;AACH;;;qDAEgB;AACb,4BAAMc,iBAAiB,EAAvB;AACA,6BAAKC,aAAL,GAAsBC,SAAS,KAAKzB,KAAL,CAAWF,aAApB,EAAmC,EAAnC,IAAyC,GAA1C,GAAiDyB,cAAtE;AACH;;;;cA9D4BjC,gB;;AAiEjCE,+BAAmBkC,WAAnB,GAAiC,aAAjC;;0CAESlC,kB","file":"linksinglestat_ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { PanelEvents } from '@grafana/data';\n\nclass LinkSingleStatCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector) {\n        super($scope, $injector);\n\n        const panelDefaults = {\n            textTemplate: '',\n            urlTemplate: '',\n            valueFontSize: '80%',\n        };\n\n        for (let prop in panelDefaults) {\n            if (!(prop in this.panel)) {\n                this.panel[prop] = panelDefaults[prop];\n            }\n        }\n\n        this.events.on(PanelEvents.editModeInitialized, this.onInitEditMode.bind(this));\n        this.events.on(PanelEvents.dataReceived, this.onDataReceived.bind(this));\n        this.events.on(PanelEvents.panelSizeChanged, this.adjustFontSize.bind(this));\n        this.events.on(PanelEvents.panelInitialized, this.adjustFontSize.bind(this));\n    }\n\n    onInitEditMode() {\n        this.fontSizes = ['20%', '30%', '50%', '70%', '80%', '100%', '110%', '120%', '150%', '170%', '200%'];\n        this.addEditorTab('Options', 'public/plugins/grafana-linksinglestat-panel/editor.html');\n    }\n\n    onDataReceived(dataList) {\n        if (!dataList.length) {\n            return;\n        }\n\n        const results = dataList[0];\n\n        if (!results) {\n            return;\n        }\n\n        const data = results.rows && results.rows[0];\n\n        // Imitate the \"templating\" syntax of the table panel plugin\n        this.text = this.panel.textTemplate.replace(\n            /\\${__cell_(\\d+)}/g,\n            (match, cellNumber) => (\n                data[cellNumber]\n            )\n        );\n        this.url = this.panel.urlTemplate.replace(\n            /\\${__cell_(\\d+)}/g,\n            (match, cellNumber) => (\n                data[cellNumber]\n            )\n        );\n    }\n\n    render() {\n        this.adjustFontSize();\n    }\n\n    adjustFontSize() {\n        const BASE_FONT_SIZE = 38;\n        this.fontPixelSize = (parseInt(this.panel.valueFontSize, 10) / 100) * BASE_FONT_SIZE;\n    }\n}\n\nLinkSingleStatCtrl.templateUrl = 'module.html';\n\nexport { LinkSingleStatCtrl };\n"]}